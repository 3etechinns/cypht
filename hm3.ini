
; -----------------------------------------------------------------------------
; General settings
; -----------------------------------------------------------------------------

; Enable built in user/password login support using a database. All the
; settings in the DB support section need to be setup for this to work. For the
; time being any other value will cause a new PHP session to be created for
; visitors on first page load.

; define how to handle sessions. Can be one of the following:
;
;  PHP_session This is the default behavior. sessions are automatically created
;              on first page load and destroyed on logout using the normal
;              PHP session handlers.
;
;  DB_auth     Like PHP_session this uses normal PHP session handlers, but adds
;              a login requirement to a local user table. DB support is required
;              for this to work.
;
;  DB_session  This uses the same authentication process as DB_auth, but stores
;              session data in the DB as well. No PHP session functions are used.

session_type=DB_session

; Default language to use for the interface strings

default_language=en_US

; Storage location for user settings. Can be either "file" or "DB". If set to
; DB the hm_user_settings file must be available.

user_config_type=file

; location of the user settings files. Must be readable/writable by the web
; server. Only used if user_config_type is set to "file"

user_settings_dir=/var/lib/hm3/users

; encryption key used for user settings files. change this to something random
; for your site.

enc_key=milkwasabadchoice

; -----------------------------------------------------------------------------
; DB support
; -----------------------------------------------------------------------------
;
; All settings are required if using the built in DB user or session support.
;
; For the DB_auth session type The target DB must contain a table called
; hm_user that we can read and write to.
;
; Postgresql:
;
;   create table hm_user (
;       username varchar(255) primary key not null,
;       hash varchar(255)
;   );

;
; Mysql:
;
;   create table hm_user (
;       username varchar(250),
;       hash varchar(250),
;       primary key (username)
;   );
;
; For DB_session support the following additional table must be available:
;
; Postgresql:
;
;   create table hm_user_session (
;       hm_id varchar(250) primary key not null,
;       data text,
;       date timestamp
;   );
;
; Mysql:
;
;   create table hm_user_session (
;       hm_id varchar(250),
;       data text,
;       date timestamp,
;       primary key (hm_id)
;   );
;
; For DB support for user_config_type the following additional table must be
; available:
;
; Postgresql:
;
;   create table hm_user_settings (
;       username varchar(250) primary key not null,
;       settings text
;   );
;
; Mysql:
;
;   create table hm_user_settings(
;       username varchar(250),
;       settings text,
;       primary key (username)
;   );
;
; Technically any DB driver supported by the PHP PDO extension should work as
; long as the required tables are present.

; database host name or ip address

db_host=127.0.0.1

; database name

db_name=test

; database user

db_user=test

; database password

db_pass=123456

; database type. can be any supported PDO driver

db_driver=mysql


; -----------------------------------------------------------------------------
; Modules
; -----------------------------------------------------------------------------

modules=core,imap_debug,tracker

